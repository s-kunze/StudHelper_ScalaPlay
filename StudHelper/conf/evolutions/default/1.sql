# --- !Ups

CREATE TABLE ADMIN(
    ID          LONG NOT NULL AUTO_INCREMENT,
	USERNAME    VARCHAR(255) NOT NULL,
	PASSWORD    VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID),
    UNIQUE (USERNAME)
);

CREATE TABLE UNIVERSITY(
    ID      LONG NOT NULL AUTO_INCREMENT,
    NAME    VARCHAR(255) NOT NULL,
    PRIMARY KEY (ID),
    UNIQUE (NAME)
);

CREATE TABLE DEPARTMENT(
    ID              LONG NOT NULL AUTO_INCREMENT,
    NAME            VARCHAR(255) NOT NULL,
    ID_UNIVERSITY   LONG,
    PRIMARY KEY (ID)
);

CREATE TABLE DEGREECOURSE(
    ID              LONG NOT NULL AUTO_INCREMENT,
    NAME            VARCHAR(255) NOT NULL,
    CREDITPOINTS    INTEGER,
    ID_DEPARTMENT   LONG,
    PRIMARY KEY (ID) 
);

CREATE TABLE PART(
    ID              LONG NOT NULL AUTO_INCREMENT,
    NAME            VARCHAR(255) NOT NULL,
    CREDITPOINTS    INTEGER,
    ID_DEGREECOURSE LONG,
    PRIMARY KEY (ID)   
);

CREATE TABLE MODUL(
    ID              LONG NOT NULL AUTO_INCREMENT,
    NAME            VARCHAR(255) NOT NULL,
    CREDITPOINTS    INTEGER,
    ID_PART         LONG,
    PRIMARY KEY (ID)     
);

CREATE TABLE LECTURE(
    ID              LONG NOT NULL AUTO_INCREMENT,
    NAME            VARCHAR(255) NOT NULL,
    CREDITPOINTS    INTEGER,
    PRIMARY KEY (ID)
);

CREATE TABLE MODUL_LECTURE(
    ID_MODUL    LONG NOT NULL,
    ID_LECTURE  LONG NOT NULL,
    PRIMARY KEY (ID_MODUL,ID_LECTURE) 
);

CREATE TABLE USER(
    ID              LONG NOT NULL AUTO_INCREMENT,
    FIRSTNAME       VARCHAR(255) NOT NULL,
    LASTNAME        VARCHAR(255) NOT NULL,
    USERNAME        VARCHAR(255) NOT NULL,
    PASSWORT        VARCHAR(255) NOT NULL,
    CREDITPOINTS    INTEGER,
    PRIMARY KEY (ID),
    UNIQUE (USERNAME)    
);

CREATE TABLE LECTURE_USER(
    mark        FLOAT,
    ID_LECTURE  LONG NOT NULL,
    ID_USER     LONG NOT NULL,
    PRIMARY KEY (ID_LECTURE, ID_USER)     
);

-- Foreign Keys Contraints
--ALTER TABLE UNIVERSITY
--    ADD INDEX FK_UNIVERSITY (ID_UNIVERSITY);

--ALTER TABLE DEPARTMENT 
--    ADD INDEX FK_DEPARTMENT_UNIVERSITY (ID_UNIVERSITY), 
--    ADD CONSTRAINT FK_DEPARTMENT_UNIVERSITY FOREIGN KEY (ID_UNIVERSITY) REFERENCES UNIVERSITY (ID);
    
--ALTER TABLE DEGREECOURSE 
--    ADD INDEX FK_DEGREECOURSE_DEPARTMENT (ID_DEPARTMENT), 
--    ADD CONSTRAINT FK_DEGREECOURSE_DEPARTMENT FOREIGN KEY (ID_DEPARTMENT) REFERENCES DEPARTMENT (ID);
    
--ALTER TABLE PART 
--    ADD INDEX FK_PART_DEGREECOURSE (ID_DEGREECOURSE), 
--    ADD CONSTRAINT FK_PART_DEGREECOURSE FOREIGN KEY (ID_DEGREECOURSE) REFERENCES DEGREECOURSE (ID);
    
--ALTER TABLE MODUL 
--    ADD INDEX FK_MODUL_PART (ID_PART), 
--    ADD CONSTRAINT FK_MODUL_PART FOREIGN KEY (ID_PART) REFERENCES PART (ID);
    
--ALTER TABLE MODUL_LECTURE 
--    ADD INDEX FK_MODULLECTURE_MODUL (ID_MODUL), 
--    ADD CONSTRAINT FK_MODULLECTURE_MODUL FOREIGN KEY (ID_MODUL) REFERENCES MODUL (ID);

--ALTER TABLE MODUL_LECTURE 
--    ADD INDEX FK_MODULLECTURE_LECTURE (ID_LECTURE), 
--    ADD CONSTRAINT FK_MODULLECTURE_LECTURE FOREIGN KEY (ID_LECTURE) REFERENCES LECTURE (ID);

--ALTER TABLE LECTURE_USER 
--    ADD INDEX FK_LECTUREUSER_USER (ID_USER), 
--    ADD CONSTRAINT FK_MODULLECTURE_USER FOREIGN KEY (ID_USER) REFERENCES USER (ID);

--ALTER TABLE LECTURE_USER 
--    ADD INDEX FK_LECTUREUSER_LECTURE (ID_LECTURE), 
--    ADD CONSTRAINT FK_LECTUREUSER_LECTURE FOREIGN KEY (ID_LECTURE) REFERENCES LECTURE (ID);

# --- !Downs
--SET foreign_key_checks = "0";

DROP TABLE IF EXISTS ADMIN;
DROP TABLE IF EXISTS UNIVERSITY;
DROP TABLE IF EXISTS DEPARTMENT;
DROP TABLE IF EXISTS DEGREECOURSE;
DROP TABLE IF EXISTS PART;
DROP TABLE IF EXISTS MODUL;
DROP TABLE IF EXISTS LECTURE;
DROP TABLE IF EXISTS MODUL_LECTURE;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS LECTURE_USER

--SET foreign_key_checks = "1";
